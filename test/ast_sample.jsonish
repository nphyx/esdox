/* eslint disable */
[ { comment: '/**\n * Some extra text\n * @overview What\'s up?\n * @copyright (c) 2012 Blah Blah Blah\n * @license MIT\n * @author Joe Schmo\n * @version  1.0.1\n*/',
    meta: 
     { filename: 'test.js',
       lineno: 1,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: {} },
    description: 'What\'s up?',
    name: 'test.js',
    kind: 'file',
    preserveName: true,
    copyright: '(c) 2012 Blah Blah Blah',
    license: 'MIT',
    author: [ 'Joe Schmo', [length] : 1 ],
    version: '1.0.1',
    longname: 'test.js',
    scope: 'global' },
  { comment: '',
    meta: 
     { range: [ 149, 171, [length]: 2 ],
       filename: 'test.js',
       lineno: 10,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000003',
          name: 'util',
          type: 'CallExpression',
          value: '' } },
    undocumented: true,
    name: 'util',
    longname: 'util',
    kind: 'member',
    scope: 'global',
    params: [ [length]: 0 ] },
  { comment: '',
    meta: 
     { range: [ 177, 195, [length]: 2 ],
       filename: 'test.js',
       lineno: 11,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000009',
          name: 'fs',
          type: 'CallExpression',
          value: '' } },
    undocumented: true,
    name: 'fs',
    longname: 'fs',
    kind: 'member',
    scope: 'global',
    params: [ [length]: 0 ] },
  { comment: '',
    meta: 
     { range: [ 201, 234, [length]: 2 ],
       filename: 'test.js',
       lineno: 12,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000015',
          name: 'jsp',
          type: 'MemberExpression',
          value: '.parser' } },
    undocumented: true,
    name: 'jsp',
    longname: 'jsp',
    kind: 'member',
    scope: 'global',
    params: [ [length]: 0 ] },
  { comment: '/**\n * Collection of stuff\n * @type {Object}\n */',
    meta: 
     { range: [ 290, 432, [length]: 2 ],
       filename: 'test.js',
       lineno: 18,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000023',
          name: 'foo',
          type: 'ObjectExpression',
          value: '{"bar":""}' } },
    description: 'Collection of stuff',
    type: { names: [ 'Object', [length]: 1 ] },
    name: 'foo',
    longname: 'foo',
    kind: 'member',
    scope: 'global',
    params: [ [length]: 0 ] },
  { comment: '/**\n   * I so cool\n   * @return {Boolean|null}\n   * @deprecated Not a good function\n   */',
    meta: 
     { range: [ 392, 430, [length]: 2 ],
       filename: 'test.js',
       lineno: 24,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000026',
          name: 'bar',
          type: 'FunctionExpression' } },
    description: 'I so cool',
    returns: 
     [ { type: { names: [ 'Boolean', 'null', [length]: 2 ] } },
       [length]: 1 ],
    deprecated: 'Not a good function',
    name: 'bar',
    longname: 'foo.bar',
    kind: 'function',
    memberof: 'foo',
    scope: 'static' },
  { comment: '/**\n  This is a test function\n  with a description on multiple lines\n  @param {String|null} file filename to parse\n                       this parsing thing is funny business\n  @param {Boolean|null} [optional] Changes behavior\n  @fires module:foo#one_thing\n  @fires module:foo#another\n  @emits module:foo#booyah\n*/',
    meta: 
     { range: [ 750, 1126, [length]: 2 ],
       filename: 'test.js',
       lineno: 39,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000031',
          name: 'testNamed',
          type: 'FunctionDeclaration',
          paramnames: [ 'file', 'optional', [length]: 2 ] },
       vars: { '': null } },
    description: 'This is a test function\n  with a description on multiple lines',
    params: 
     [ { type: { names: [ 'String', 'null', [length]: 2 ] },
         description: 'filename to parse\n                       this parsing thing is funny business',
         name: 'file' },
       { type: { names: [ 'Boolean', 'null', [length]: 2 ] },
         optional: true,
         description: 'Changes behavior',
         name: 'optional' },
       [length]: 2 ],
    fires: 
     [ 'module:foo#event:one_thing',
       'module:foo#event:another',
       'module:foo#event:booyah',
       [length]: 3 ],
    name: 'testNamed',
    longname: 'testNamed',
    kind: 'function',
    scope: 'global' },
  { comment: '',
    meta: 
     { range: [ 876, 908, [length]: 2 ],
       filename: 'test.js',
       lineno: 44,
       columnno: 8,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000052',
          name: 'ast',
          type: 'CallExpression',
          value: '' } },
    undocumented: true,
    name: 'ast',
    longname: '<anonymous>~ast',
    kind: 'member',
    memberof: '<anonymous>',
    scope: 'inner',
    params: [ [length]: 0 ] },
  { comment: '/**\n  Can I get some description please\n  on more than one line, if possible.\n  @module foo\n*/',
    meta: 
     { filename: 'test.js',
       lineno: 53,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: {} },
    description: 'Can I get some description please\n  on more than one line, if possible.',
    kind: 'module',
    name: 'foo',
    longname: 'module:foo' },
  { comment: '/**\n  function without name\n  @function testAnonynous\n  @returns {String} the result\n*/',
    meta: 
     { filename: 'test.js',
       lineno: 60,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: {} },
    description: 'function without name',
    kind: 'function',
    name: 'testAnonynous',
    returns: 
     [ { type: { names: [ 'String', [length]: 1 ] },
         description: 'the result' },
       [length]: 1 ],
    longname: 'module:foo~testAnonynous',
    scope: 'inner',
    memberof: 'module:foo' },
  { comment: '',
    meta: 
     { range: [ 1320, 1369, [length]: 2 ],
       filename: 'test.js',
       lineno: 67,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000092',
          name: 'testAnonynous',
          type: 'FunctionExpression' } },
    undocumented: true,
    name: 'testAnonynous',
    longname: 'module:foo~testAnonynous',
    kind: 'function',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '/**\n    second function without name\n    @returns {String} the result\n  */',
    meta: 
     { range: [ 1450, 1501, [length]: 2 ],
       filename: 'test.js',
       lineno: 74,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000098',
          name: 'testAnon2',
          type: 'FunctionExpression' } },
    description: 'second function without name',
    returns: 
     [ { type: { names: [ 'String', [length]: 1 ] },
         description: 'the result' },
       [length]: 1 ],
    name: 'testAnon2',
    longname: 'module:foo~testAnon2',
    kind: 'function',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '',
    meta: 
     { range: [ 1509, 1814, [length]: 2 ],
       filename: 'test.js',
       lineno: 79,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000105',
          name: 'multi',
          type: 'ObjectExpression',
          value: '{"func1":"","func2":""}' } },
    undocumented: true,
    name: 'multi',
    longname: 'module:foo~multi',
    kind: 'member',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '/**\n   * @param a the first param\n   * @param b the second param\n   * @returns the result\n  */',
    meta: 
     { range: [ 1618, 1659, [length]: 2 ],
       filename: 'test.js',
       lineno: 85,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000108',
          name: 'func1',
          type: 'FunctionExpression' } },
    params: 
     [ { description: 'the first param', name: 'a' },
       { description: 'the second param', name: 'b' },
       [length]: 2 ],
    returns: [ { description: 'the result' }, [length]: 1 ],
    name: 'func1',
    longname: 'module:foo~multi.func1',
    kind: 'function',
    memberof: 'module:foo~multi',
    scope: 'static' },
  { comment: '/**\n   * @param c the first param\n   * @param d the second param\n   * @returns the other result\n  */',
    meta: 
     { range: [ 1767, 1811, [length]: 2 ],
       filename: 'test.js',
       lineno: 94,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000115',
          name: 'func2',
          type: 'FunctionExpression' } },
    params: 
     [ { description: 'the first param', name: 'c' },
       { description: 'the second param', name: 'd' },
       [length]: 2 ],
    returns: [ { description: 'the other result' }, [length]: 1 ],
    name: 'func2',
    longname: 'module:foo~multi.func2',
    kind: 'function',
    memberof: 'module:foo~multi',
    scope: 'static' },
  { comment: '/**\n  This is a deprecated function.\n  @deprecated Because I said so\n*/',
    meta: 
     { range: [ 1889, 1918, [length]: 2 ],
       filename: 'test.js',
       lineno: 104,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000122',
          name: 'testDeprecated',
          type: 'FunctionDeclaration',
          paramnames: [ [length]: 0 ] } },
    description: 'This is a deprecated function.',
    deprecated: 'Because I said so',
    name: 'testDeprecated',
    longname: 'module:foo~testDeprecated',
    kind: 'function',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '/**\n * @description Provides chainable functions to easily build and execute a command.\n * @property {String} last_err Last error, if present\n * @class\n */',
    meta: 
     { range: [ 2103, 2281, [length]: 2 ],
       filename: 'test.js',
       lineno: 114,
       columnno: 4,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000130',
          name: 'Ketch',
          type: 'FunctionExpression',
          value: 'Ketch' },
       vars: { 'this.cmd': 'module:foo~Ketch#cmd' } },
    description: 'Provides chainable functions to easily build and execute a command.',
    properties: 
     [ { type: { names: [ 'String', [length]: 1 ] },
         description: 'Last error, if present',
         name: 'last_err' },
       [length]: 1 ],
    kind: 'class',
    name: 'Ketch',
    longname: 'module:foo~Ketch',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '/**\n   * @description Internal array representation of this command.\n   * @type {Array}\n   */',
    meta: 
     { range: [ 2229, 2278, [length]: 2 ],
       filename: 'test.js',
       lineno: 120,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000136',
          name: 'this.cmd',
          type: 'CallExpression',
          value: '',
          paramnames: [ [length]: 0 ] } },
    description: 'Internal array representation of this command.',
    type: { names: [ 'Array', [length]: 1 ] },
    name: 'cmd',
    longname: 'module:foo~Ketch#cmd',
    kind: 'member',
    memberof: 'module:foo~Ketch',
    scope: 'instance' },
  { comment: '/**\n  * This is a class\n  * @class SampleClass\n*/',
    meta: 
     { filename: 'test.js',
       lineno: 123,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: {} },
    description: 'This is a class',
    kind: 'class',
    name: 'SampleClass',
    longname: 'module:foo~SampleClass',
    scope: 'inner',
    memberof: 'module:foo' },
  { comment: '',
    meta: 
     { range: [ 2334, 3466, [length]: 2 ],
       filename: 'test.js',
       lineno: 127,
       columnno: 0,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000148',
          name: 'SampleClass',
          type: 'FunctionDeclaration',
          paramnames: [ 'parm1', [length]: 1 ] },
       vars: 
        { 'this.func1': 'module:foo~SampleClass#func1',
          '': null,
          testAnonynous: 'module:foo~SampleClass~testAnonynous',
          testNamed: 'module:foo~SampleClass~testNamed' } },
    undocumented: true,
    name: 'SampleClass',
    longname: 'module:foo~SampleClass',
    kind: 'function',
    scope: 'inner',
    memberof: 'module:foo',
    params: [ [length]: 0 ] },
  { comment: '/**\n   * A method in the class\n   * @param a the first param\n   * @param b the second param\n   * @returns the result\n   * @example\n   *   func1(1, 2)\n  */',
    meta: 
     { range: [ 2524, 2571, [length]: 2 ],
       filename: 'test.js',
       lineno: 137,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000153',
          name: 'this.func1',
          type: 'FunctionExpression',
          paramnames: [ 'a', 'b', [length]: 2 ] } },
    description: 'A method in the class',
    params: 
     [ { description: 'the first param', name: 'a' },
       { description: 'the second param', name: 'b' },
       [length]: 2 ],
    returns: [ { description: 'the result' }, [length]: 1 ],
    examples: [ 'func1(1, 2)', [length]: 1 ],
    name: 'func1',
    longname: 'module:foo~SampleClass#func1',
    kind: 'function',
    memberof: 'module:foo~SampleClass',
    scope: 'instance' },
  { comment: '/**\n  function without name\n    @function testAnonynous\n    @returns {String} the result\n  */',
    meta: 
     { filename: 'test.js',
       lineno: 141,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: {} },
    description: 'function without name',
    kind: 'function',
    name: 'testAnonynous',
    returns: 
     [ { type: { names: [ 'String', [length]: 1 ] },
         description: 'the result' },
       [length]: 1 ],
    longname: 'module:foo~testAnonynous',
    scope: 'inner',
    memberof: 'module:foo' },
  { comment: '',
    meta: 
     { range: [ 2677, 2726, [length]: 2 ],
       filename: 'test.js',
       lineno: 147,
       columnno: 6,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000164',
          name: 'testAnonynous',
          type: 'FunctionExpression' } },
    undocumented: true,
    name: 'testAnonynous',
    longname: 'module:foo~SampleClass~testAnonynous',
    kind: 'function',
    memberof: 'module:foo~SampleClass',
    scope: 'inner',
    params: [ [length]: 0 ] },
  { comment: '/**\n    This is a test method\n    with a description on multiple lines\n    @param {String|null} file filename to parse\n                         this parsing thing is funny business\n    @param {Boolean|null} [optional] Changes behavior\n    @fires module:foo#one_thing\n    @fires module:foo#another\n    @emits module:foo#booyah\n  */',
    meta: 
     { range: [ 3064, 3464, [length]: 2 ],
       filename: 'test.js',
       lineno: 161,
       columnno: 2,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000170',
          name: 'testNamed',
          type: 'FunctionDeclaration',
          paramnames: [ 'file', 'optional', [length]: 2 ] },
       vars: { '': null } },
    description: 'This is a test method\n    with a description on multiple lines',
    params: 
     [ { type: { names: [ 'String', 'null', [length]: 2 ] },
         description: 'filename to parse\n                         this parsing thing is funny business',
         name: 'file' },
       { type: { names: [ 'Boolean', 'null', [length]: 2 ] },
         optional: true,
         description: 'Changes behavior',
         name: 'optional' },
       [length]: 2 ],
    fires: 
     [ 'module:foo#event:one_thing',
       'module:foo#event:another',
       'module:foo#event:booyah',
       [length]: 3 ],
    name: 'testNamed',
    longname: 'module:foo~SampleClass~testNamed',
    kind: 'function',
    memberof: 'module:foo~SampleClass',
    scope: 'inner' },
  { comment: '',
    meta: 
     { range: [ 3200, 3232, [length]: 2 ],
       filename: 'test.js',
       lineno: 166,
       columnno: 10,
       path: '/home/nphyx/src/js/esdox/fixtures/under',
       code: 
        { id: 'astnode100000191',
          name: 'ast',
          type: 'CallExpression',
          value: '' } },
    undocumented: true,
    name: 'ast',
    longname: '<anonymous>~ast',
    kind: 'member',
    memberof: '<anonymous>',
    scope: 'inner',
    params: [ [length]: 0 ] },
  { kind: 'package',
    longname: 'package:undefined',
    files: 
     [ '/home/nphyx/src/js/esdox/fixtures/under/test.js',
       [length]: 1 ] },
  [length]: 26 ]
